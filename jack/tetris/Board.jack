/** Implements the Tetris board. */
class Board {
    static int maxW;
    static int maxH;
    static int numBoxW;     // num of horizontal boxes
    static int numBoxH;    // num of vertical boxes
    static int boxSize;      // num of box size

    field int x1, x2, y1, y2;  // board position
    field Array array;       // array of boxes, which represent box state. (fill=1, empty=0)

    /** Constructs a new Tetris board. */
    constructor Board new() {
        let maxW = 511;
        let maxH = 255;
        let numBoxW = 8;
        let numBoxH = 10;
        let boxSize = 14;
        let array = Array.new(numBoxW);

        let x1 = (maxW / 2) - (numBoxW * boxSize / 2);
        let x2 = x1 + (numBoxW * boxSize);
        let y1 = maxH - (numBoxW * boxSize);
        let y2 = maxH - boxSize;
        return this;
    }

    /** draw this board */
    method void draw() {
        do Screen.setColor(true);
        do Screen.drawRectangle(x1, y1, x1 + boxSize, y2 + boxSize);
        do Screen.drawRectangle(x1, y2, x2 + boxSize, y2 + boxSize);
        do Screen.drawRectangle(x2, y1, x2 + boxSize, y2 + boxSize);
        return;
    }

    /** getter */
    method int x1() {
        return x1;
    }
    method int x2() {
        return x2;
    }
    method int y1() {
        return y1;
    }
    method int y2() {
        return y2;
    }
}
