/** Implements the Tetris board. */
class Board {
    static int maxW;
    static int maxH;
    static int numBoxW;     // num of horizontal boxes
    static int numBoxH;    // num of vertical boxes
    static int boxSize;      // num of box size

    field int x1, x2, y1, y2;  // board position
    field Array cells;       // array of cells, which represent box state. (fill=1, empty=0)

    /** Constructs a new Tetris board. */
    constructor Board new() {
        var int i, j;
        var Array row;

        let maxW = 511;
        let maxH = 255;
        let numBoxW = 10;
        let numBoxH = 10;
        let boxSize = 14;

        let i = 0;
        let cells = Array.new(numBoxW);
        while (i < numBoxW) {
            let row = Array.new(numBoxH);
            let cells[i] = row;
            let j = 0;
            while (j < numBoxH) {
                // bottom or most left or most right
                if ((j = (numBoxH - 1)) | (i = 0) | (i = (numBoxW - 1))) {
                    let row[j] = true;
                }
                let j = j + 1;
            }
            let i = i + 1;
        }

        let x1 = (maxW / 2) - (numBoxW * boxSize / 2);
        let x2 = x1 + (numBoxW * boxSize);
        let y1 = maxH - (numBoxW * boxSize);
        let y2 = maxH - boxSize;
        return this;
    }

    /** draw this board */
    method void draw() {
        var int i, j;
        var Array row;

        let i = 0;
        while (i < numBoxW) {
            let row = cells[i];
            let j = 0;
            while (j < numBoxH) {
                do Screen.setColor(row[j]);
                do Screen.drawRectangle(x1 + (i * boxSize), y1 + (j * boxSize), x1 + ((i+1) * boxSize), y1 + ((j+1) * boxSize));
                let j = j + 1;
            }
            let i = i + 1;
        }
        return;
    }

    /** getter */
    method int x1() {
        return x1;
    }
    method int x2() {
        return x2;
    }
    method int y1() {
        return y1;
    }
    method int y2() {
        return y2;
    }
    method Array cells() {
        return cells;
    }
}
