// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Not (in=sel[0], out=notsel0);
    Not (in=sel[1], out=notsel1);
    Not (in=sel[2], out=notsel2);
    And (a=sel[2], b=sel[1], out=flag11);
    And (a=sel[2], b=notsel1, out=flag10);
    And (a=notsel2, b=sel[1], out=flag01);
    And (a=notsel2, b=notsel1, out=flag00);

    And (a=flag00, b=notsel0, out=flaga);
    And (a=flag00, b=sel[0], out=flagb);
    And (a=flag01, b=notsel0, out=flagc);
    And (a=flag01, b=sel[0], out=flagd);
    And (a=flag10, b=notsel0, out=flage);
    And (a=flag10, b=sel[0], out=flagf);
    And (a=flag11, b=notsel0, out=flagg);
    And (a=flag11, b=sel[0], out=flagh);

    And (a=in, b=flaga, out=a);
    And (a=in, b=flagb, out=b);
    And (a=in, b=flagc, out=c);
    And (a=in, b=flagd, out=d);
    And (a=in, b=flage, out=e);
    And (a=in, b=flagf, out=f);
    And (a=in, b=flagg, out=g);
    And (a=in, b=flagh, out=h);
}
